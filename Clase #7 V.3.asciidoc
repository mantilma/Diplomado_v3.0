# I Minatori ed il **Bitcoin Mining**

### I **nodi minatori**

Provano ad essere i primi a risolvere problemi computazionali matematici e creare nuovi blocchi

- con l'obiettivo di guadagnare ricompense in denaro
- dimostrando di aver compiuto un lavoro,
    - e quindi, contribuendo a mantenere la rete sicura.
- I minatori eseguono sempre un nodo completo, ma anche:
    - aggregano transazioni valide in gruppi, creando e proponendo blocchi
    - attraverso un meccanismo che d√† sicurezza alla rete chiamato **Proof of Work, PoW**
        - (da qui il nome "**prova di lavoro**", in inglese proof-of-work).
        - √à necessario per la sicurezza, che previene le frodi e consente la fiducia.
- La ricompensa di ogni blocco √® composta da:
    - Nuovi BTC creati dal software Bitcoin e, inoltre,
    - le commissioni incluse nelle transazioni presenti in detto blocco.
    

Una differenza fondamentale tra i **nodi completi** e i nodi di **mining**:

- I nodi di mining possono proporre nuovi blocchi alla rete Bitcoin
    - Cercano di risolvere enigmi crittografici in un processo chiamato "**mining**".
        - Devono dimostrare di essere quelli che hanno eseguito il lavoro richiesto
            - Quindi, possono ricevere **ricompense** per i blocchi
- I nodi completi non possono proporre nuovi blocchi
    - Pertanto, **non possono** ricevere ricompense
    

### Com'√® la competizione matematica tra minatori?

Ancora una volta torniamo ad un'analogia:

- Ogni minatore ha un dado speciale che dispone dei numeri da 1 a 1000, cio√® ha 1000 facce.
- I minatori si preparano a partecipare a una competizione, con l'incentivo a vincere poco pi√π di 6,25 bitcoin nei prossimi 10 minuti.
- Bitcoin sceglie un numero target da 1 a 1000 e lo pubblica affinch√© tutti possano vederlo sulla rete. Supponiamo che scelga #8. La competizione inizia.
- L'obiettivo dei minatori √® tirare il dado e ottenere un numero inferiore a 8.
    - Alcuni minatori hanno vantaggi e una maggiore probabilit√† di vincita: perch√©?
        - Hanno pi√π potere d'acquisto e hanno comprato pi√π di un dado.
        - Altri lanciano dadi a una velocit√† maggiore rispetto ad altri.
- La competizione inizia:
    - I minatori iniziano a tirare i dadi centinaia di volte, ma questo richiede molto lavoro. La loro mano si stanca.
    - Un minatore fortunato alza la mano e dice "ho vinto!".
    - Tutti gli altri minatori smettono di tirare i dadi e guardano il tavolo su cui stanno giocando.
    - In questo modo tutti possono verificare se sta dicendo la verit√†.
    - Se la maggioranza, per consenso, concorda sul fatto che il minatore √® il vincitore, gli viene data la sua ricompensa.
    - Ricominciano.
- Se pi√π minatori partecipano alla prossima competizione, Bitcoin riduce il numero target in modo che ci vogliano sempre circa 10 minuti prima che qualcuno vinca.

## Una piccola deviazione - per capire l'importanza degli *hash*

## *Cos'√® una funzione?*

- Immaginiamola come una macchina che trasforma qualcosa in qualcos'altro:
    - qualcosa viene introdotto, modificato da regole ferree, e ne emerge qualcos'altro completamente diverso. Vale a dire:
    - Vengono forniti i dati di input, **x**, o i dati che si immettono,
    - Ad essi vengono applicate operazioni matematiche predefinite (addizione, sottrazione, moltiplicazione, ecc.),
    - Il risultato √® un *output*, **f(x),y.**


Esempio:  f(x)=3x+4 mi dice: 

- moltiplica l'input (x) per 3, aggiungi 4 e ottieni l'*output* f(x), o y.
- Quale sarebbe la risposta di f(2)? Cio√®, qual √® il risultato di y quando x=2?
- Ora, qual √® la domanda qui? f(x)=15. Cerchiamo di trovare l'input o l'output? √à possibile trovare il valore? Vediamo‚Ä¶.         f(x)=3x+4=15.      3x+4=15‚Ä¶.        x=?

Alcune funzioni sono unidirezionali.

- Hanno la propriet√† di essere facili da calcolare ma...
- Anche se conosciamo il **risultato**, non saremo in grado di *decifrare* i dati di *input*.

Se odi la matematica, formuliamo un'analogia che ti aiuter√† a capire.

Faremo un succo di frutta rossa.

- Questi sono i *dati di input: (t=tazza)*
    - 1 t di acqua, 3 cubetti di ghiaccio, 18 lamponi, 8 fragole, 15 t di more e 1/5 t di zucchero.
- L'*operazione della funzione:*
    - Frulliamo il tutto nel frullatore.
- *Dati di output **risultato**:*
    - un succo di frutta delizioso.

√à quasi impossibile per un'altra persona capire quali siano gli ingredienti e le porzioni esatte.

- Questo √® ci√≤ che significa una funzione unidirezionale.
- Il succo non pu√≤ essere riconvertito nei dati di input.

## ***Cos'√® un hash?***

**Bitcoin** utilizza la crittografia, una branca della matematica

- Il loro processo di input e output √® molto simile.
- Una funzione **hash** crittografica:
    - √® un'operazione crittografica che prende qualsiasi quantit√† di dati,
    - Y restituisce un valore hash, di identificatori
    - **unici** e **irripetibili**, ****deterministici**** e **caotici**


- Non ci sono restrizioni sui dati di input,
    - il volore di *hash* risulta sempre della stessa lunghezza di caratteri
    - L'hash √® anche considerato come un'impronta digitale dei dati di input.
    
    
üí° **Determin√≠stico:** gli stessi input produrranno invariabilmente gli stessi output o risultati.

üí° **Caotico:** un input leggermente diverso produrr√† un output completamente diverso e non correlato.
    
    
    

***Che cos'√® SHA256?***

- La funci√≥n hash particular que usa Bitcoin se llama SHA256.
- Su **resultado** o **hash** siempre es Hexadecimal (n√∫meros entre 0 y 9 y letras entre A y F).
- SHA256(entrada)=hash

Vamos a crear **hashes**. Veamos los siguientes ejemplos:  

SHA256(Dalia)=

bbadb37bc80b041a1cafdfadf1efd93d6386117b33046d650e75ec2cb101758c 

SHA256(DaliaP)=

25cad1ff3deb7bc5ba54ccf1f0fe8e8ff4a17f58826847b8cae2ddbd6cd6ab77

SHA256(Hola, me llamo Dalia. Soy de Medell√≠n, Colombia.)=

619010e5ab4877ef398e82a277e7134529a5ff1875f7671ff0177c7ab0302423

### Actividad:

C√≥mo crear un hash? En los siguientes sitio web podremos practicarlo:

https://hashgenerator.de/ 

https://emn178.github.io/online-tools/sha256.html

Primero, qu√© pasa cuando ingresas el hash 256 de Dalia? Comp√°ralo con el que est√° escrito aqu√≠. 

Te das cuenta que aunque el resultado es aleatorio, 

- el resultado de una entrada en particular siempre ser√° el mismo.
    - Si en vez de nombre, apellido y fecha de nacimiento, nos identific√°ramos con un n√∫mero as√≠, no habr√≠a el problema de tener dos ‚ÄúMar√≠a‚Äù o dos ‚ÄúJos√©‚Äù en clase.

Cual es el hash de tu nombre? Tu nombre y apellido? 

Qu√© pasa si cambias una letra a tu nombre? Hubieras podido predecir este hash?

***Qu√© es un ‚Äúnonce‚Äù?  (Number used once)***

- Simplemente es un n√∫mero usado una vez.
- Los ‚Äúnonce‚Äù son muy √∫tiles para la miner√≠a ya que uno de los mayores objetivos es encontrar resultados de los SHA256(**Entrada**) que satisfagan ciertas condiciones predeterminadas.

Supongamos que el **objetivo** es encontrar un hash que **inicie con el n√∫mero ‚Äúcero‚Äù** 

- cambi√°ndole solo el √∫ltimo d√≠gito a SHA(Dalia**P**).  El **nonce** cambiar√≠a la ‚ÄúP‚Äù :

SHA(Dalia**1**)= c2cb88c9aec429a7fe9194351e748247f668241ff75c708b43ea83ecd730268f

SHA(Dalia**2**)=17df2ae3b1dec56c7bde0cf8b161f24329d351e08cb797adbd76af46401dadf3

‚Ä¶..estuvimos de buenas y s√≥lo  necesitamos intentar ocho veces para lograr nuestro objetivo:

SHA(Dalia**8**)=**0**93d4ddb855114f49f3b775803529ed1cbd5598b5995c327091552bab5672658

 ***Qu√© es un √Årbol de Merkle?***

Una estructura de datos dividida en varias capas de hashes que permite verificar, 

- de forma r√°pida y eficaz, la informaci√≥n de todas las transacciones.
- Como un √°rbol invertido, en la que se parte desde las hojas
    - y se escala progresivamente a trav√©s de las ramas hasta llegar al **nodo ra√≠z**
        - identificador principal que permitieverificar el conjunto de datos como un todo.
- Su ra√≠z √∫nica final, que contiene toda la informaci√≥n de todas las transacciones,
    - se denomina **Merkle Root o Ra√≠z de Merkle Root**
        
    
    

# La Miner√≠a

Ahora volvamos al proceso de Bitcoin:

- Los mineros tienen libertad de escoger transacciones para incluir en su pr√≥ximo bloque.
    - seleccionan y agrupan nuevas transacciones verificadas a un nuevo ‚Äúbloque candidato‚Äù

C*uales transacciones deben escoger para su ‚Äúbloque candidato‚Äù?*

- Eligen aquellas con mayores incentivos monetarios y que ocupen menos memoria.
    - Los depositantes agregan comisiones (o propinas) para incentivar a los mineros
    - Adicionalmente, los mineros est√°n motivados a trabajar honradamente.
- Entre m√°s transacciones hayan en la mempool, m√°s congestionada la red.
    - Los incentivos monetarios generalmente son mayores cuando hay mucho tr√°fico
- Durante mucho tr√°fico, los mineros eligen transacciones que tienen comisiones m√°s altas.
    - Una vez el tr√°fico haya disminuido-se agregan aquellas con menores incentivos.

*En qu√© consiste cada bloque candidato?*

- El tama√±o de un bloque es de aproximadamente 2.5 MB
- Cada bloque tiene capacidad para unas pocas miles de transacciones como m√°ximo,
    - por lo tanto, es importante elegir eficientemente
- Incluye un encabezado de bloque
- Este encabezado de bloque se somete a la funci√≥n hash
    - SHA256(**encabezado**)=RESULTADO;

*Para qu√© se usa este RESULTADO* ?

- El objetivo es producir un identificador v√°lido para un nuevo bloque
    - que encaje perfectamente detr√°s del √∫ltimo bloque en la cadena existente,
- Para esto, un minero debe producir el ‚Äúhash ganador‚Äù
    - el cual ser√° deber√° ser por debajo de un ‚Äúvalor objetivo‚Äù espec√≠fico.
- Siempre y cuando el RESULTADO sea mayor que el hash deseado,
    - el minero ajusta un **nonce** y vuelve a intentarlo.
- Los mineros repiten esto varios miles de veces por segundo.
    - con la finalidad de ganar la recompensa del bloque.
        - y crear una ‚Äúhuella digital‚Äù o un hash √∫nico de dicho bloque
    - El proceso requiere cambiar el nonce miles y miles de veces,
        - generando much√≠simos posibles RESULTADOS
        - hasta lograr el ‚Äúhash ganador‚Äù antes que cualquier otro minero.
    - Muy similar a nuestro ejemplo inicial de lanzar el dado muchas veces,
        - hasta que un minero logra ganar con un RESULTADO debajo de el objetivo.
        
- Esto significa que cualquier nodo minero en la red puede extraer un nuevo bloque,
    - pero necesita gastar energ√≠a para poder hacerlo.

*Qu√© pasa cuando se encuentra el ‚Äúhash ganador‚Äù?*

- Un minero afortunado, finalmente produce el hash ganador,
- Transmite su √©xito a toda la red.
    - Ese **hash** se convierte en el **‚Äúhash del bloque‚Äù o su identificador √∫nico**
- Para el resto de los mineros, la confirmaci√≥n de la validez del bloque es un proceso simple.
    - S√≥lo se debe asegurar que todas las transacciones sigan siendo validas,
    - y que el hash del bloque sea menor que el ‚Äúvalor objetivo‚Äù.
- Al ser confirmado el bloque, los otros nodos lo agregar√°n a la cadena existente
    - Todas las transacciones contenidas en dicho bloque quedar√°n permanentemente grabadas en la cadena de bloques
- El proceso se repetir√° aproximadamente cada 10 minutos
    - los mineros comenzar√°n a intentar extraer un nuevo bloque encima.
    
 

*Y como se gana la recompensa el minero que ha encontrado el valor objetivo?*

- Todos los bloques candidatos crean una primera transacci√≥n que incluye una recompensa:
    - Contiene una cantidad de bitcoin nuevo que va a ser liberado cuando se cree el bloque
        - y la totalidad de las comisiones que generan las transacciones seleccionadas
- Solamente el minero ganador puede cobrar dicha recompensa.
    - Por su gran esfuerzo computacional: **PoW, o Prueba de Trabajo**
        - PoW ha sido un m√©todo exitoso porque:
            - encontrar el **hash** es extremadamente dif√≠cil, pero verificarlo es sencillo.
- A esta transacci√≥n se le llama **coinbase** (**monedabase**)
    - y es la primera en cada bloque de la blockchain.

## ****No Conf√≠es, Verifica‚Ä¶. Que quiere decir?****

- Las transacciones obtienen una confirmaci√≥n cuando son incluidas en un bloque y luego tras la confirmaci√≥n de cada bloque posterior.
- Para que dicho bloque se incluya en la cadena de bloques, se debe enlazar correctamente debajo de el √∫ltimo bloque creado en la red.
- Una¬†confirmaci√≥n **en la blockchain, indica que ‚Äúla transacci√≥n ha sido procesada y validada por la red y es muy poco probable que se revierta‚Äù.
- Se recomienda esperar un¬†m√≠nimo de 6 confirmaciones para asegurarse de que los fondos fueron transferidos.
- Bitcoin es conocida como la **blockchain** m√°s segura y veraz que existe.
    
 
    

## El Hash del Bloque**:**

- Cada bloque hace referencia a un bloque anterior,
    - a trav√©s del campo ‚Äòbloque anterior‚Äô(**previous hash**) en la **cabecera del bloque**.
- La secuencia de los hashes que unen cada bloque al previo
    - crea una cadena que se remonta hasta el el primer bloque jam√°s creado,
        - conocido como el bloque g√©nesis.
- Cualquier modificaci√≥n  m√≠nima a cualquier transacci√≥n cambiar√° el hash del bloque,
    - y lo desligar√° del bloque anterior.
- Si un hacker trata de alterar hasta una coma de una transacci√≥n,
    - se crear√° una cascada de fallas en la verificaci√≥n de bloques posteriores.
- Esto se debe a que cada bloque tiene informaci√≥n sobre el anterior.


Los bloques se componen de una cabecera de bloque y sus transacciones. 

- El **encabezado** contiene:
    1. el resumen de los datos dentro del bloque, es decir, 
        - todas las transacciones comprimidas en una **ra√≠z de Merkle**
    2. junto con el **hash** del bloque anterior en la blockchain y 
    3. un **nonce**, el cual puede cambiar tantas veces sea necesario en busca de ‚Äú**valor objetivo**‚Äù
- Mediante la funci√≥n SHA256, se comprime toda la informaci√≥n contenida en el bloque.
    - Este resultado es el ‚Äúhash del bloque‚Äù o  representant su ‚Äúhuella digital‚Äù.


### El Nonce del Bloque

- El **nonce** un campo es un n√∫mero dentro de la cabecera:
    - Los mineros¬†lo **modifican hasta que**  el **hash de la cabecera** resulte en el **objetivo de dificultad o el valor objetivo**
    
- El **objetivo de dificultad** siempre comienza con una cantidad de ceros.
    - La cantidad de ceros es variable.
        - Depende cuantos mineros est√°n tratando de extraer el bloque.

**Actividad**:

En el siguiente link se puede analizar la cadena de bloques en tiempo real.

https://explorer.bit2me.com/home  

https://bits.monospace.live/block/height/746043

**Visualizaci√≥n** de los √∫ltimos bloques, las transacciones confirmadas y sin confirmar, el n√∫mero de transacciones, utilizaci√≥n de memoria y valor aproximado del bloque completo,  https://bits.monospace.live/

Cual fue el √∫ltimo bloque minado?

Cuantas transacciones se incluyeron en dicho bloque?

Cual es el valor total transado en bitcoin?

Cuanto fue el tama√±o en Megabytes del bloque?

Con cuantos ceros comienza el nonce del bloque?

Cuanto gan√≥ el minero en total?

Cual fue el valor total de las comisiones que recibi√≥ el minero por adicionar las transacciones a la red?

Escoge una de las transacciones de m√°s valor del bloque. La cantidad de BTC se reparti√≥ a cuantos monederos?

Cuando un minero encuentra un **nonce** que, a√±adido al **hash de cabecera,** cumpla el **objetivo de dificultad**, lo a√±ade a la **cabecera del bloque nuevo** y lo env√≠a a la red para que el resto de mineros puedan comprobar que la soluci√≥n es v√°lida.


