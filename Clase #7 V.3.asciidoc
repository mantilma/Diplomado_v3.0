# I Minatori ed il **Bitcoin Mining**

### I **nodi minatori**

Provano ad essere i primi a risolvere problemi computazionali matematici e creare nuovi blocchi

- con l'obiettivo di guadagnare ricompense in denaro
- dimostrando di aver compiuto un lavoro,
    - e quindi, contribuendo a mantenere la rete sicura.
- I minatori eseguono sempre un nodo completo, ma anche:
    - aggregano transazioni valide in gruppi, creando e proponendo blocchi
    - attraverso un meccanismo che d√† sicurezza alla rete chiamato **Proof of Work, PoW**
        - (da qui il nome "**prova di lavoro**", in inglese proof-of-work).
        - √à necessario per la sicurezza, che previene le frodi e consente la fiducia.
- La ricompensa di ogni blocco √® composta da:
    - Nuovi BTC creati dal software Bitcoin e, inoltre,
    - le commissioni incluse nelle transazioni presenti in detto blocco.
    

Una differenza fondamentale tra i **nodi completi** e i nodi di **mining**:

- I nodi di mining possono proporre nuovi blocchi alla rete Bitcoin
    - Cercano di risolvere enigmi crittografici in un processo chiamato "**mining**".
        - Devono dimostrare di essere quelli che hanno eseguito il lavoro richiesto
            - Quindi, possono ricevere **ricompense** per i blocchi
- I nodi completi non possono proporre nuovi blocchi
    - Pertanto, **non possono** ricevere ricompense
    

### Com'√® la competizione matematica tra minatori?

Ancora una volta torniamo ad un'analogia:

- Ogni minatore ha un dado speciale che dispone dei numeri da 1 a 1000, cio√® ha 1000 facce.
- I minatori si preparano a partecipare a una competizione, con l'incentivo a vincere poco pi√π di 6,25 bitcoin nei prossimi 10 minuti.
- Bitcoin sceglie un numero target da 1 a 1000 e lo pubblica affinch√© tutti possano vederlo sulla rete. Supponiamo che scelga #8. La competizione inizia.
- L'obiettivo dei minatori √® tirare il dado e ottenere un numero inferiore a 8.
    - Alcuni minatori hanno vantaggi e una maggiore probabilit√† di vincita: perch√©?
        - Hanno pi√π potere d'acquisto e hanno comprato pi√π di un dado.
        - Altri lanciano dadi a una velocit√† maggiore rispetto ad altri.
- La competizione inizia:
    - I minatori iniziano a tirare i dadi centinaia di volte, ma questo richiede molto lavoro. La loro mano si stanca.
    - Un minatore fortunato alza la mano e dice "ho vinto!".
    - Tutti gli altri minatori smettono di tirare i dadi e guardano il tavolo su cui stanno giocando.
    - In questo modo tutti possono verificare se sta dicendo la verit√†.
    - Se la maggioranza, per consenso, concorda sul fatto che il minatore √® il vincitore, gli viene data la sua ricompensa.
    - Ricominciano.
- Se pi√π minatori partecipano alla prossima competizione, Bitcoin riduce il numero target in modo che ci vogliano sempre circa 10 minuti prima che qualcuno vinca.

## Una piccola deviazione - per capire l'importanza degli *hash*

## *Cos'√® una funzione?*

- Immaginiamola come una macchina che trasforma qualcosa in qualcos'altro:
    - qualcosa viene introdotto, modificato da regole ferree, e ne emerge qualcos'altro completamente diverso. Vale a dire:
    - Vengono forniti i dati di input, **x**, o i dati che si immettono,
    - Ad essi vengono applicate operazioni matematiche predefinite (addizione, sottrazione, moltiplicazione, ecc.),
    - Il risultato √® un *output*, **f(x),y.**


Esempio:  f(x)=3x+4 mi dice: 

- moltiplica l'input (x) per 3, aggiungi 4 e ottieni l'*output* f(x), o y.
- Quale sarebbe la risposta di f(2)? Cio√®, qual √® il risultato di y quando x=2?
- Ora, qual √® la domanda qui? f(x)=15. Cerchiamo di trovare l'input o l'output? √à possibile trovare il valore? Vediamo‚Ä¶.         f(x)=3x+4=15.      3x+4=15‚Ä¶.        x=?

Alcune funzioni sono unidirezionali.

- Hanno la propriet√† di essere facili da calcolare ma...
- Anche se conosciamo il **risultato**, non saremo in grado di *decifrare* i dati di *input*.

Se odi la matematica, formuliamo un'analogia che ti aiuter√† a capire.

Faremo un succo di frutta rossa.

- Questi sono i *dati di input: (t=tazza)*
    - 1 t di acqua, 3 cubetti di ghiaccio, 18 lamponi, 8 fragole, 15 t di more e 1/5 t di zucchero.
- L'*operazione della funzione:*
    - Frulliamo il tutto nel frullatore.
- *Dati di output **risultato**:*
    - un succo di frutta delizioso.

√à quasi impossibile per un'altra persona capire quali siano gli ingredienti e le porzioni esatte.

- Questo √® ci√≤ che significa una funzione unidirezionale.
- Il succo non pu√≤ essere riconvertito nei dati di input.

## ***Cos'√® un hash?***

**Bitcoin** utilizza la crittografia, una branca della matematica

- Il loro processo di input e output √® molto simile.
- Una funzione **hash** crittografica:
    - √® un'operazione crittografica che prende qualsiasi quantit√† di dati,
    - Y restituisce un valore hash, di identificatori
    - **unici** e **irripetibili**, ****deterministici**** e **caotici**


- Non ci sono restrizioni sui dati di input,
    - il volore di *hash* risulta sempre della stessa lunghezza di caratteri
    - L'hash √® anche considerato come un'impronta digitale dei dati di input.
    
    
üí° **Determin√≠stico:** gli stessi input produrranno invariabilmente gli stessi output o risultati.

üí° **Caotico:** un input leggermente diverso produrr√† un output completamente diverso e non correlato.
    
    
    

***Che cos'√® SHA256?***

- La particolare funzione hash utilizzata da Bitcoin si chiama SHA256.
- Il suo **risultato** o **hash** √® sempre esadecimale (numeri compresi tra 0 e 9 e lettere comprese tra A e F).
- SHA256(input)=hash

Calcoliamo alcuni **hash**. Vediamo i seguenti esempi:

SHA256(Dalia)=

bbadb37bc80b041a1cafdfadf1efd93d6386117b33046d650e75ec2cb101758c 

SHA256(DaliaP)=

25cad1ff3deb7bc5ba54ccf1f0fe8e8ff4a17f58826847b8cae2ddbd6cd6ab77

SHA256((Hola, me llamo Dalia. Soy de Medell√≠n, Colombia.)=

619010e5ab4877ef398e82a277e7134529a5ff1875f7671ff0177c7ab0302423

### Attivit√†:

Come creare un hash? Nei seguenti siti web possiamo farlo:

https://hashgenerator.de/ 

https://emn178.github.io/online-tools/sha256.html

Innanzitutto, cosa succede quando inserisci l'hash 256 di Dalia? Confrontalo con quello scritto qui.

Puoi osservare che sebbene il risultato sia casuale,

- il risultato di un particolare input sar√† sempre lo stesso.
    - Se al posto di nome, cognome e data di nascita ci identificassimo con un numero come questo, non ci sarebbe il problema di avere due "Mar√≠a" o due "Jos√©" in classe.

Qual √® l'hash del tuo nome? Il tuo nome completo?

Cosa succede se modifichi una lettera del tuo nome? Avresti potuto prevedere questo hash?

***Cos'√® un "nonce"?***

- √à semplicemente un numero usato una volta.
- I nonce sono molto utili per il mining poich√© uno degli obiettivi principali √® trovare risultati da SHA256(**Input**) che soddisfino determinate condizioni predeterminate.

Supponiamo che l'**obiettivo** sia trovare un hash che **inizia con il numero "zero"**

- cambiando solo l'ultima cifra in SHA(Dalia**P**). Il **nonce** cambierebbe la "P":

SHA(Dalia**1**)= c2cb88c9aec429a7fe9194351e748247f668241ff75c708b43ea83ecd730268f

SHA(Dalia**2**)=17df2ae3b1dec56c7bde0cf8b161f24329d351e08cb797adbd76af46401dadf3

‚Ä¶..siamo fortunati che abbiamo solo bisogno di provare otto volte per raggiungere il nostro obiettivo:

SHA(Dalia**8**)=**0**93d4ddb855114f49f3b775803529ed1cbd5598b5995c327091552bab5672658

 ***Cos'√® un albero Merkle?***

Una struttura dati suddivisa in pi√π layer di hash che permette di verificare,

- in modo rapido ed efficiente, le informazioni di tutte le transazioni.
- Come un albero capovolto, che si dirama dalle foglie
    - e scala progressivamente attraverso i rami fino a raggiungere il **nodo radice**
        - identificatore primario che consente la verifica del set di dati nel suo insieme.
- La sua radice univoca finale, che contiene tutte le informazioni di tutte le transazioni,
    - si chiama **Merkle Root o Radice di Merkle Root**
        
    
    

# Mining

Ora torniamo al processo Bitcoin:

- I minatori sono liberi di scegliere le transazioni da includere nel blocco successivo.
    - selezionano e raggruppano nuove transazioni verificate in un nuovo "blocco candidato"

*Quali transazioni dovresti scegliere per il tuo ‚Äúblocco candidato‚Äù?*

- Scelgono quelle con maggiori incentivi monetari e che occupano meno memoria.
    - I depositanti aggiungono commissioni (fees) per incentivare i minatori
    - Inoltre, i minatori sono motivati ‚Äã‚Äãa lavorare onestamente.
- Pi√π transazioni ci sono nel mempool, pi√π congestionata √® la rete.
    - Gli incentivi monetari sono generalmente pi√π alti quando c'√® molto traffico
- Durante il traffico elevato, i minatori scelgono transazioni con commissioni pi√π elevate.
    - Una volta diminuito il traffico, si aggiungono quelle con incentivi inferiori.

*In cosa consiste ogni blocco candidato?*

- La dimensione di un blocco √® di circa 2,5 MB
- Ogni blocco pu√≤ contenere al massimo qualche migliaio di transazioni,
    - pertanto, √® importante scegliere in modo efficiente
- Include un'intestazione di blocco
- Questa intestazione di blocco √® l'input  della funzione di hash
    - SHA256(**intestazione**)=RISULTATO;

*A cosa serve questo RISULTATO*?

- L'obiettivo √® produrre un identificatore valido per un nuovo blocco
    - che si adatti perfettamente all'ultimo blocco della catena esistente.
- a tal scopo, un minatore deve produrre "l'hash vincente"
    - che deve essere inferiore a uno specifico ‚Äúvalore obiettivo‚Äù.
- Finch√© il RISULTATO √® maggiore dell'hash desiderato,
    - il minatore imposta un **nonce** e riprova.
- I minatori ripetono tutto ci√≤ migliaia di volte al secondo.
    - al fine di guadagnare la ricompensa del blocco.
        - e creare una "impronta digitale" o un hash univoco di detto blocco
    - Il processo richiede di cambiare il nonce migliaia e migliaia di volte,
        - generando molti possibili RISULTATI
        - fino a raggiungere l'"hash vincente" prima di qualsiasi altro minatore.
    - Molto simile al nostro esempio iniziale di tirare il dado molte volte,
        - finch√© un minatore non riesce a vincere con un RISULTATO inferiore al target.
        
- Ci√≤ significa che qualsiasi nodo di mining nella rete pu√≤ estrarre un nuovo blocco,
    - ma deve spendere energia per poterlo fare.

*Cosa succede quando viene trovato l'"hash vincente"?*

- Un minatore fortunato alla fine produce l'hash vincente,
- Trasmette il ‚Äã‚Äãsuo risultato all'intera rete.
    - Quell'**hash** diventa l'**"hash del blocco" o il suo identificatore univoco**
- Per il resto dei minatori, la conferma della validit√† del blocco √® un processo semplice.
    - devono assicurarsi che tutte le transazioni rimangano valide.
    - e che l'hash del blocco sia inferiore al "valore target".
- Quando il blocco viene confermato, gli altri nodi lo aggiungeranno alla catena esistente
    - Tutte le transazioni contenute in tale blocco saranno registrate in modo permanente nella blockchain.
- Il processo si ripeter√† ogni 10 minuti circa.
    - i minatori inizieranno a provare a estrarre un nuovo blocco sopra di esso.
    
 

*E come riceve la ricompensa il minatore (miner) che ha trovato il valore target corretto?*

- Tutti i blocchi candidati creano una prima transazione che include una ricompensa:
    - Contiene una quantit√† di nuovi bitcoin che verranno rilasciati alla creazione del blocco
        - e tutte le commissioni incluse nelle transazioni selezionate
- Solo il minatore vincente pu√≤ riscuotere tale ricompensa.
    - Per il suo grande sforzo computazionale: **PoW, o Proof of Work**
        - PoW √® un metodo funzionante perch√©:
            - trovare l'**hash** √® estremamente difficile, ma verificarlo √® facile.
- Questa transazione si chiama **coinbase** (**moneta di base**)
    - ed √® la prima in ogni blocco della blockchain.

## ****Non fidarti, verifica... Cosa significa?****

- Le transazioni ricevono una conferma quando vengono incluse in un blocco e poi dopo la conferma di ogni blocco successivo.
- Affinch√© tale blocco sia incluso nella blockchain, deve essere correttamente collegato a partire dell'ultimo blocco creato sulla rete.
- Una sola conferma ** sulla blockchain indica che "la transazione √® stata processata e convalidata dalla rete ed √® molto improbabile che venga annullata".
- Si consiglia di attendere un minimo di 6 conferme per assicurarsi che i fondi siano stati trasferiti.
- Bitcoin rappresenta la **blockchain** pi√π sicura e veritiera mai creata.
    
 
    

## L'hash del blocco**:**

- Ogni blocco fa riferimento a un blocco precedente,
    - attraverso il campo 'blocco precedente' (**previous hash**) nell'**intestazione del blocco** (block header).
- La sequenza di hash che collegano ogni blocco a quello precedente
    - crea una catena che percorsa a ritroso porta al primo blocco mai creato.
        - conosciuto come il blocco genesi.
- Qualsiasi modifica minore a qualsiasi transazione cambier√† l'hash del blocco,
    - e lo scollegher√† dal blocco precedente.
- Se un hacker cerca di alterare anche solo una virgola di una transazione,
    - si creer√† una successione di fallimenti nella verifica dei blocchi successivi.
- Questo perch√© ogni blocco contiene informazioni riguardo a quello precedente.


Los bloques se componen de una cabecera de bloque y sus transacciones. 

- El **encabezado** contiene:
    1. el resumen de los datos dentro del bloque, es decir, 
        - todas las transacciones comprimidas en una **ra√≠z de Merkle**
    2. junto con el **hash** del bloque anterior en la blockchain y 
    3. un **nonce**, el cual puede cambiar tantas veces sea necesario en busca de ‚Äú**valor objetivo**‚Äù
- Mediante la funci√≥n SHA256, se comprime toda la informaci√≥n contenida en el bloque.
    - Este resultado es el ‚Äúhash del bloque‚Äù o  representant su ‚Äúhuella digital‚Äù.


### El Nonce del Bloque

- El **nonce** un campo es un n√∫mero dentro de la cabecera:
    - Los mineros¬†lo **modifican hasta que**  el **hash de la cabecera** resulte en el **objetivo de dificultad o el valor objetivo**
    
- El **objetivo de dificultad** siempre comienza con una cantidad de ceros.
    - La cantidad de ceros es variable.
        - Depende cuantos mineros est√°n tratando de extraer el bloque.

**Actividad**:

En el siguiente link se puede analizar la cadena de bloques en tiempo real.

https://explorer.bit2me.com/home  

https://bits.monospace.live/block/height/746043

**Visualizaci√≥n** de los √∫ltimos bloques, las transacciones confirmadas y sin confirmar, el n√∫mero de transacciones, utilizaci√≥n de memoria y valor aproximado del bloque completo,  https://bits.monospace.live/

Cual fue el √∫ltimo bloque minado?

Cuantas transacciones se incluyeron en dicho bloque?

Cual es el valor total transado en bitcoin?

Cuanto fue el tama√±o en Megabytes del bloque?

Con cuantos ceros comienza el nonce del bloque?

Cuanto gan√≥ el minero en total?

Cual fue el valor total de las comisiones que recibi√≥ el minero por adicionar las transacciones a la red?

Escoge una de las transacciones de m√°s valor del bloque. La cantidad de BTC se reparti√≥ a cuantos monederos?

Cuando un minero encuentra un **nonce** que, a√±adido al **hash de cabecera,** cumpla el **objetivo de dificultad**, lo a√±ade a la **cabecera del bloque nuevo** y lo env√≠a a la red para que el resto de mineros puedan comprobar que la soluci√≥n es v√°lida.


